package wingdbJavaDebugEngine;

import com.sun.jdi.*;

public interface IVariableCallback
{
    /*
        calls method on variable-value object, args is list of arguments
    */
    Value invokeValue( String methodName, Value[] args );
    Value invokeByValue( Value value, String methodName, Value[] args );

    /*
        id - identifier of child, can contain only alphanumeric characters and underscore
        label - label of child under which it will be visible in VS debug windows
        type - jdi type of child
        value - jdi value of child

        hint: you can also create new values with use of routines VirtualMachine.mirrorOf
        virtual machine object is passed as argument to IVisualizerFactory.allocVisualizer
        routine
    */
    void addField( String id, String label, Type type, Value value ) throws Exception;

    /*
        routines for visualizing containers
        first class setElementType to set type of elements
        then successively add elements through addElement
        identifiers (id) of children will be automatically generated by WinJDB
    */
    void setElementType( Type type ) throws Exception;
    void addElement( String label, Value value ) throws Exception;

}
